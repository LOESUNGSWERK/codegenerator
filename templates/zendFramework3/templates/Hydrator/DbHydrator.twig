<?php
/**
 * @copyright  Copyright (c) 2017 TraSo GmbH (www.traso.de)
 * @author     rkuehle
 * @since      16.05.17
 */

namespace {{modulName|ucf}}\Model\{{name|ucf}}\Hydrator;

use {{modulName|ucf}}\Model\{{name|ucf}}\Entity\{{name|ucf}}Entity;
use Zend\Hydrator\AbstractHydrator;
use Zend\Hydrator\HydratorInterface;

/**
 * Class {{name|ucf}}DbHydrator
 * @package {{modulName|ucf}}\Model\{{name|ucf}}\Hydrator
 */
class {{name|ucf}}DbHydrator extends AbstractHydrator implements HydratorInterface
{
    /**
     * @param {{name|ucf}}Entity $object
     * @return array
     */
    public function extract($object){
        return  array(
        {% if fields|length > 0 %}{% for item in fields %}
             '{{item.name}}' => $object->get{{item.name|ucf}}(){% if loop.last != true %},{% endif %}
        {% endfor %}{% endif %}
        );

    }

    /**
     * @param array $data
     * @param DeliveryServerEntity $object
     * @return DeliveryServerEntity
     */
    public function hydrate(array $data, $object)
    {
        {% if fields|length > 0 %}{% for item in fields %}
            $object->set{{item.name|ucf}}($data['{{item.name}}']);
        {% endfor %}{% endif %}
        return $object;
    }

}